on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  main:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master

    # WALL'O'CACHE!
    - name: cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - name: cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - run: rustup update

    # tests
    - run: cargo test-core
    - run: cargo test-dom-lib
    - run: cargo test-dom-lib-browser
    - run: cargo test-dom-hacking
    - run: cargo test-dom-todo
    - run: cargo test-ssr-example
    - run: cargo test-dom-drivertest

    # examples, docs, website
    - run: cargo build-dom-hacking
    - run: cargo build-dom-todo
    - run: cargo docs-all
    - run: cargo docs-ofl
    - run: cargo build-website

    - name: promote website to prod, ensure crates published
      if: github.ref == 'refs/heads/master' && runner.os == 'Linux'
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      run: |
        npx netlify-cli deploy --prod
        cargo login ${{ secrets.CARGO_API_TOKEN }}
        cargo ofl published

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: rustup update
    - run: rustup component add clippy
    - run: cargo clippy-core
    - run: cargo clippy-dom
    - run: cargo clippy-ofl

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: cargo fmt-project --check
